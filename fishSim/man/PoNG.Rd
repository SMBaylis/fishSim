% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fishSim_dev.R
\name{PoNG}
\alias{PoNG}
\title{PoNG(): find a Point of No Growth (by tweaking first-year mortality).}
\usage{
PoNG(mateType = "flat", mortType = "flat", batchSize, firstBreed = 0,
  maxClutch = Inf, osr = c(0.5, 0.5), maturityCurve, femaleCurve,
  maxAge = Inf, mortRate, ageMort, stockMort, ageStockMort)
}
\arguments{
\item{mateType}{the value of 'type' used in the altMate() call. Must be one of 'flat', 'age',
or 'ageSex'. If 'flat', 'batchSize' must be provided. If 'age', 'maturityCurve'
and 'batchSize' must be provided. If 'ageSex', 'femaleCurve' and 'batchSize' must
be provided. Defaults to 'flat'.}

\item{mortType}{the value of 'type' used in the mort() call. Must be one of 'flat', 'age',
'stock', or 'ageStock'. If 'flat', 'mortRate' must be provided. If 'age',
'ageMort' must be provided. If 'stock', 'stockMort' must be provided. If
'ageStock', 'ageStockMort' must be provided. Defaults to 'flat'.}

\item{batchSize}{the value of 'batchSize' used in the altMate() call. Cannot be blank.}

\item{firstBreed}{the value of 'firstBreed' used in the altMate() call. Defaults to 0.}

\item{maxClutch}{the value of 'maxClutch' used in the altMate() call. Defaults to Inf. If non-Inf,
_effective_ batchSize is estimated as the mean of 1000000 draws from the
distribution of batchSize, subsetted to those <= maxAge.}

\item{osr}{the value of 'osr' used in the altMate() call. Female proportion is used as a
multiplier on the fecundities. Defaults to c(0.5, 0.5).}

\item{maturityCurve}{the value of 'maturityCurve' used in the altMate() call. check_growthrates()
only uses female fecundities in its estimates, so femaleCurve is
equivalent to maturityCurve in check_growthrates(), but maturityCurve is
used when mateType is 'age'. If both mortality and maturity are specified
as vectors, they can be of different lengths. If the maturity vector is
shorter, it is 'padded' to the same length as the mortality vector by
repeating the last value in the vector.}

\item{femaleCurve}{the value of 'femaleCurve' used in the altMate() call. check_growthrates()
only uses female fecundities in its estimates, so femaleCurve is
equivalent to maturityCurve in check_growthrates(), but femaleCurve is used
when 'mateType' is 'ageSex'. If both mortality and maturity are specified
as vectors, they can be of different lengths. If the maturity vector is
shorter, it is 'padded' to the same length as the mortality vector by
repeating the last value in the vector.}

\item{maxAge}{the value of 'maxAge' used in the mort() call. Defaults to Inf.}

\item{mortRate}{the value of 'mortRate' used in the mort() call}

\item{ageMort}{the value of 'ageMort' used in the mort() call. If both mortality and maturity are
specified as vectors, they can be of different lengths. If the mortality vector is
shorter, it is 'padded' to the same length as the maturity vector by repeating the
last value in the vector.}

\item{stockMort}{the value of 'stockMort' used in the mort() call}

\item{ageStockMort}{the value of 'ageStockMort' used in the mort() call. If both mortality and
maturity are specified as vectors, they can be of different lengths. If the
mortality vector is shorter, it is 'padded' to the same length as the maturity
vector by repeating the last value in the vector.}
}
\description{
This is essentially a wrapper for check_growthrate(), taking all the same inputs. It returns
a plot of projected growth-rates across all possible first-year survival rates and the numeric
first-year survival rate at which zero population growth is expected (via uniroot, or something).
The reasoning behind this utility is that often in biological systems, adult survival rates and
fecundities may be quite well-characterised, and population growth rates may also be well
characterised, but first-year survival may be nearly impossible to assess. This utility allows
a value of first-year survival to be chosen such that the population size does not change,
while leaving all well-characterised adult survival parameters unchanged. It is also useful for
answering questions of the form: 'how high would our first-year survival have to be, in order
for this population to _not_ be in decline?', which will surely be familiar in applied management
situations. Note that PoNG() uses some brute-force methods on the back end, so
it's not terribly efficient. It takes around 5 - 10 seconds per stock on a fairly-modern
(vintage 2018) laptop.
}
\examples{
batchSize = 0.8
firstBreed = 1
mortRate = 0.2
PoNG(batchSize = batchSize, firstBreed = firstBreed, mortRate = mortRate)

mortType = "stock"
stockMort = c(0.2, 0.3, 0.5)
firstBreed = 1
batchSize = 0.9
PoNG(mortType = "stock", batchSize = batchSize, firstBreed = firstBreed, stockMort = stockMort)
 ## note that only two of the stocks return a valid PoNG - with 0.5 mortality, stock 3 cannot
 ## reach null growth with any first-year survival rate between 0 and 1.
}
\seealso{
[fishSim::check_growthrate()]
}
